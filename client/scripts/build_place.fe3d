7 21
META script_type_update
META script_state_wait

/// Miscellaneous
IF _buildMode IS <false> OR _lastBuildMode IS <false>
    EXIT

/// Update raycasting
fe3d:raycast_calculate_terrain_intersection(100.0, 0.1)

/// Prepare non-empty values
LST aabbIds = fe3d:model_get_aabb_ids(_buildingTypes[_buildingIndex])
LST partIds = fe3d:model_get_part_ids(_buildingTypes[_buildingIndex])
STR buildingModel = _buildingModels[_buildingIndex]
STR buildingType = _buildingTypes[_buildingIndex]
DEC rotation = fe3d:model_get_base_rotation_y(buildingType)
DEC x = fe3d:raycast_get_point_on_terrain_x()
DEC y = fe3d:raycast_get_point_on_terrain_y()
DEC z = fe3d:raycast_get_point_on_terrain_z()
INT planksPrice = _buildingPricesPlanks[_buildingIndex]
INT stonePrice = _buildingPricesStone[_buildingIndex]
INT clayPrice = _buildingPricesClay[_buildingIndex]
INT strawPrice = _buildingPricesStraw[_buildingIndex]
BOL lmbClicked = fe3d:input_is_mouse_pressed("BUTTON_LEFT")
BOL rmbClicked = fe3d:input_is_mouse_pressed("BUTTON_RIGHT")

/// Prepare empty values
LST color = {0.0, 0.4, 0.0}
DEC aabbPosX = 0.0
DEC aabbPosZ = 0.0
DEC aabbSizeX = 0.0
DEC aabbSizeZ = 0.0
DEC aabbBL = 0.0
DEC aabbBR = 0.0
DEC aabbTR = 0.0
DEC aabbTL = 0.0
INT index = 0
INT maxIndex = 0

/// Update building rotation
IF rmbClicked IS <true>
    ADD rotation 90.0

/// Update building transformation
fe3d:model_set_base_position(buildingType, x, y, z)
fe3d:model_set_base_rotation(buildingType, 0.0, rotation, 0.0)

/// Update price color
IF _totalPlanks LESS planksPrice
    EDIT color = {0.5, 0.0, 0.0}
IF _totalStone LESS stonePrice
    EDIT color = {0.5, 0.0, 0.0}
IF _totalClay LESS clayPrice
    EDIT color = {0.5, 0.0, 0.0}
IF _totalStraw LESS strawPrice
    EDIT color = {0.5, 0.0, 0.0}

/// Update price GUI
fe3d:text2d_set_color("building_price_planks", color[0], color[1], color[2])
fe3d:text2d_set_color("building_price_stone", color[0], color[1], color[2])
fe3d:text2d_set_color("building_price_clay", color[0], color[1], color[2])
fe3d:text2d_set_color("building_price_straw", color[0], color[1], color[2])

/// Update AABBs collision color
fe3d:collision_calculate_model_aabbs(buildingType)
LST collisions = fe3d:collision_check_model_models(buildingType, "")
INT collisionCount = misc:list_size("collisions")
IF collisionCount MORE 0
    EDIT color = {0.5, 0.0, 0.0}

/// Update AABBs position color
EDIT index = 0
EDIT maxIndex = misc:list_size("aabbIds")
LOOP
    IF index IS maxIndex
        BREAK
    EDIT aabbPosX = fe3d:model_get_aabb_position_x(buildingType, aabbIds[index])
    EDIT aabbPosZ = fe3d:model_get_aabb_position_z(buildingType, aabbIds[index])
    EDIT aabbSizeX = fe3d:model_get_aabb_size_x(buildingType, aabbIds[index])
    EDIT aabbSizeZ = fe3d:model_get_aabb_size_z(buildingType, aabbIds[index])
    DIV aabbSizeX 2.0
    DIV aabbSizeZ 2.0
    SUB aabbPosX aabbSizeX
    SUB aabbPosZ aabbSizeZ
    EDIT aabbBL = fe3d:terrain_get_pixel_height("island", aabbPosX, aabbPosZ)
    ADD aabbPosX aabbSizeX
    ADD aabbPosX aabbSizeX
    EDIT aabbBR = fe3d:terrain_get_pixel_height("island", aabbPosX, aabbPosZ)
    ADD aabbPosZ aabbSizeZ
    ADD aabbPosZ aabbSizeZ
    EDIT aabbTR = fe3d:terrain_get_pixel_height("island", aabbPosX, aabbPosZ)
    SUB aabbPosX aabbSizeX
    SUB aabbPosX aabbSizeX
    EDIT aabbTL = fe3d:terrain_get_pixel_height("island", aabbPosX, aabbPosZ)
    IF aabbBL LESS _buildingHeight OR aabbBR LESS _buildingHeight OR aabbTR LESS _buildingHeight OR aabbTL LESS _buildingHeight
        EDIT color = {0.5, 0.0, 0.0}
    ADD index 1

/// Update building color
EDIT index = 0
EDIT maxIndex = misc:list_size("partIds")
LOOP
    IF index IS maxIndex
        BREAK
    fe3d:model_set_color(buildingType, partIds[index], color[0], color[1], color[2])
    ADD index 1

/// Compose new building ID
CAST _buildingCounter STR
STR buildingId = misc:string_concat(buildingType, "_")
EDIT buildingId = misc:string_concat(buildingId, _buildingCounter)
CAST _buildingCounter INT

/// Place new building
IF lmbClicked IS <true> AND color[1] NOT 0.0
    fe3d:model_place(buildingId, buildingModel, 0.0, 0.0, 0.0)
    fe3d:model_set_base_position(buildingId, x, y, z)
    fe3d:model_set_base_rotation(buildingId, 0.0, rotation, 0.0)
    SUB _totalPlanks planksPrice
    SUB _totalStone stonePrice
    SUB _totalClay clayPrice
    SUB _totalStraw strawPrice
    ADD _buildingCounter 1
    PUSH _placedBuildingIds buildingId
    PUSH _placedBuildingTypes buildingType
    EDIT _placedBuildingId = buildingId
    EDIT _placedBuildingType = buildingType
