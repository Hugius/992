69 52
META script_type_update
META script_state_waiting

/// Define reusable values
DEF BOL hasWorker = <false>
DEF BOL hasTool = <false>

/// Hide GUI
IF _lastSelectedBuildingType IS "feller" OR _isFirstUpdate IS <true>
  fe3d:quad2d_set_visible("feller_worker", <false>)
  fe3d:quad2d_set_visible("feller_tool", <false>)
  fe3d:quad2d_set_visible("feller_time", <false>)
  fe3d:quad2d_set_visible("feller_convert", <false>)
  fe3d:quad2d_set_visible("feller_wood", <false>)
  fe3d:text2d_set_visible("feller_worker", <false>)
  fe3d:text2d_set_visible("feller_tool", <false>)
  fe3d:text2d_set_visible("feller_wood", <false>)

/// Show GUI
IF _selectedBuildingType IS "feller"
  ALT hasWorker = misc:list_contains("_workerJobBuildingIds", _selectedBuildingId)
  ALT hasTool = misc:list_contains("_toolBuildingIds", _selectedBuildingId)
  IF hasWorker IS <true>
    IF hasTool IS <true>
      fe3d:quad2d_set_visible("feller_time", <true>)
      fe3d:quad2d_set_visible("feller_convert", <true>)
      fe3d:quad2d_set_visible("feller_wood", <true>)
      fe3d:text2d_set_visible("feller_wood", <true>)
    ELSE
      fe3d:quad2d_set_visible("feller_tool", <true>)
      fe3d:text2d_set_visible("feller_tool", <true>)
      IF _totalTools MORE 0
        ALT _cursorType = "HAND"
        DEF BOL isLmbPressed = fe3d:input_is_mouse_pressed("BUTTON_LEFT")
        IF isLmbPressed IS <true>
          SUB _totalTools 1
          PUSH _toolBuildingIds _selectedBuildingId
  ELSE
    fe3d:quad2d_set_visible("feller_worker", <true>)
    fe3d:text2d_set_visible("feller_worker", <true>)

/// Update fellers
DEF LST treeIds = {}
DEF STR closestTreeId = ""
DEF DEC closestTreeDistance = 0.0
DEF DEC treeDistance = 0.0
DEF DEC fX = 0.0
DEF DEC fY = 0.0
DEF DEC fZ = 0.0
DEF DEC tX = 0.0
DEF DEC tY = 0.0
DEF DEC tZ = 0.0
DEF INT maxFellerIndex = misc:list_size("_fellerIds")
DEF INT maxTreeIndex = 0
DEF INT fellerIndex = 0
DEF INT treeIndex = 0
DEF BOL isFalling = <false>
LOOP
  IF fellerIndex IS maxFellerIndex
    BREAK
  IF _fellerTreeIds[fellerIndex] NOT ""
    ALT isFalling = fe3d:model_is_animation3d_started(_fellerTreeIds[fellerIndex], "tree")
    IF isFalling IS <false>
      fe3d:model_delete(_fellerTreeIds[fellerIndex])
      ALT _fellerTreeIds[fellerIndex] = ""
      ADD _totalWood 1
  ALT hasWorker = misc:list_contains("_workerJobBuildingIds", _fellerIds[fellerIndex])
  ALT hasTool = misc:list_contains("_toolBuildingIds", _fellerIds[fellerIndex])
  IF hasWorker IS <true> AND hasTool IS <true>
    IF _fellerTimers[fellerIndex] IS _productionTime
      ALT _fellerTimers[fellerIndex] = 0
      ALT fX = fe3d:model_get_base_position_x(_fellerIds[fellerIndex])
      ALT fY = fe3d:model_get_base_position_y(_fellerIds[fellerIndex])
      ALT fZ = fe3d:model_get_base_position_z(_fellerIds[fellerIndex])
      ALT treeIds = fe3d:model_find_ids("tree")
      ALT maxTreeIndex = misc:list_size("treeIds")
      ALT treeIndex = 0
      LOOP
        IF treeIndex IS maxTreeIndex
          BREAK
        ALT tX = fe3d:model_get_base_position_x(treeIds[treeIndex])
        ALT tY = fe3d:model_get_base_position_y(treeIds[treeIndex])
        ALT tZ = fe3d:model_get_base_position_z(treeIds[treeIndex])
        ALT treeDistance = math:vector_distance(fX, fY, fZ, tX, tY, tZ)
        IF closestTreeId IS "" OR treeDistance LESS closestTreeDistance
          ALT closestTreeId = treeIds[treeIndex]
          ALT closestTreeDistance = treeDistance
        ADD treeIndex 1
      IF closestTreeId NOT ""
        fe3d:model_start_animation3d(closestTreeId, "tree", 1)
        ALT _fellerTreeIds[fellerIndex] = closestTreeId
    ELSE
      ADD _fellerTimers[fellerIndex] 1
  ADD fellerIndex 1
